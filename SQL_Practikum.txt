*Задание 1*

Посчитай количество автомобилей в каждой компании из таблицы cabs. Отсортируй значения по убыванию. Команда предполагает, что некоторые компании не вывели достаточно автомобилей на линию.
Выведи те компании, в которых меньше 100 автомобилей. Поле с числом автомобилей назови cnt, поле с названием компании — company_name.

Ответ:

SELECT COUNT(cab_id) AS cnt,company_name 
FROM cabs  
GROUP BY company_name HAVING count(cab_id) < 100 ORDER BY cnt desc;

Задание 2

В приложении такси рассчитывается коэффициент стоимости поездки. Если погода хорошая, значение коэффициента равно 1. Если на улице дождь или шторм, коэффициент повышается до 2. У команды есть гипотеза, что в расчётах коэффициента ошибка. Чтобы проверить расчёт коэффициента, команде нужна выборка данных: разработчик может сверить коэффициент с данными в логах и исправить баг. Твоя задача — получить выборку.
Чтобы это сделать:
Получи описание погодных условий из таблицы weather_records для каждого часа.
Раздели все часы на две группы оператором CASE: Bad, если поле description содержит слова rain или storm; Good для всех остальных.
Полученное поле назови weather_conditions.
В результирующей таблице должно быть два поля — дата и час (ts) и weather_conditions.
Сделай выборку за период с 2017-11-05 00:00 по 2017-11-06 00:00.

Ответ: 

SELECT ts,CASE WHEN description ~~ '%rain%' 
THEN 'Bad' WHEN description ~~ '%storm%' 
THEN 'Bad' ELSE 'Good' END as weather_conditions 
FROM weather_records  WHERE ts BETWEEN '2017-11-05 00:00' AND '2017-11-06 00:00';

Задание 3

После обновления ПО таксопарки стали сообщать, что прибыль, которую они получают, не сходится с данными, которые отдаёт приложение. Разработка предполагает, что проблема может быть в данных о количестве поездок.
Чтобы определить, есть ли баг, нужно получить выборку с количеством поездок каждого таксопарка за 15 и 16 ноября 2017 года.
Выведи поле company_name. Поле с числом поездок назови trips_amount и выведи его.
Результаты, полученные в поле trips_amount, отсортируй по убыванию.

Ответ:

SELECT cabs.company_name as company_name,
 COUNT(trips.trip_id) as trips_amount 
FROM cabs 
INNER JOIN trips ON trips.trip_id = cabs.cab_id WHERE start_ts BETWEEN '2017-11-15 00:00' AND '2017-11-16 23:59' 
GROUP BY company_name 
ORDER BY trips_amount desc;


